from chatbot.chat_responses.common_chat_response import CommonChatResponse


class EmployerChatResponse(CommonChatResponse):
    WELCOME_INTENT = "WelcomeIntent"
    SEARCH_CANDIDATE_INTENT = "SearchCandidateIntent"
    MANAGE_CANDIDATE_INTENT = "ManageCandidateIntent"
    UPDATE_COMPANY_INFO_INTENT = "UpdateCompanyInfoIntent"
    FEEDBACK_INTENT = "FeedbackIntent"
    SUPPORT_INTENT = "SupportIntent"
    CONTACT_CONSULTANT_INTENT = "ContactConsultantIntent"
    CONTACT_CONSULTANT_INPUT_NAME_COMPANY_EMAIL_PHONE_INTENT = "ContactConsultant_InputName_CompanyName_Email_Phone_Intent"
    ACCOUNT_AND_PASSWORD_INTENT = "AccountAndPasswordIntent"
    ABOUT_US_INTENT = "AboutUsIntent"
    
    def __init__(self):
        super().__init__()

    def get_welcome_intent_response(self, params={}):
        """
        Return response with list of chip options for WelcomeIntent
        
        Args:
            params (dict): Dictionary of parameters

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f"Xin ch√†o! M√¨nh l√† tr·ª£ l√Ω tuy·ªÉn d·ª•ng c·ªßa {self.app_name}. M√¨nh c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n? üëã"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(options=[
                                    {"text": "T√¨m ki·∫øm ·ª©ng vi√™n",
                                        "icon_url": self.chatbot_icons["employer_search_candidate"]},
                                    {"text": "H·ªì s∆° ·ª©ng tuy·ªÉn",
                                        "icon_url": self.chatbot_icons["employer_manage_candidate"]},
                                    {"text": "C·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty",
                                        "icon_url": self.chatbot_icons["employer_update_company_info"]},
                                    {"text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                        "icon_url": self.chatbot_icons["common_feedback"]},
                                    {"text": "H·ªó tr·ª£",
                                        "icon_url": self.chatbot_icons["common_support"]},
                                    {"text": "V·ªÅ ch√∫ng t√¥i",
                                        "icon_url": self.chatbot_icons["common_about_us"]},
                                ])
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=["Kh√¥ng bi·∫øt b·∫°n c·∫ßn h·ªó tr·ª£ g√¨ v·ªÅ tuy·ªÉn d·ª•ng ha? üòä"]
                )
            ]
        }

    def get_search_candidate_intent_response(self, params={}):
        """
        Return response for SearchCandidateIntent
        
        Args:
            params (dict): Dictionary of parameters
                search_candidate_link: str - link to search candidate page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t√¨m ki·∫øm ·ª©ng vi√™n ph√π h·ª£p nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang t√¨m ki·∫øm ·ª©ng vi√™n",
                                            "image_url": self.chatbot_icons["employer_search_candidate"],
                                            "link": params.get("search_candidate_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m v·ªÅ tuy·ªÉn d·ª•ng kh√¥ng ha? ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "image_url": self.chatbot_icons["employer_manage_candidate"],
                                            "text": "H·ªì s∆° ·ª©ng tuy·ªÉn"
                                        },
                                        {
                                            "text": "C·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty",
                                            "image_url": self.chatbot_icons["employer_update_company_info"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "image_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "image_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "image_url": self.chatbot_icons["common_about_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_manage_candidate_intent_response(self, params={}):
        """
        Return response for ManageCandidateIntent
        
        Args:
            params (dict): Dictionary of parameters
                manage_candidate_link: str - link to manage candidate page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ qu·∫£n l√Ω h·ªì s∆° ·ª©ng tuy·ªÉn nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(options=[
                                    {
                                        "text": "ƒêi ƒë·∫øn trang qu·∫£n l√Ω h·ªì s∆° ·ª©ng tuy·ªÉn",
                                        "image_url": self.chatbot_icons["employer_manage_candidate"],
                                        "link": params.get("manage_candidate_link", "")
                                    }
                                ])
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m v·ªÅ tuy·ªÉn d·ª•ng kh√¥ng ha? ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm ·ª©ng vi√™n",
                                            "image_url": self.chatbot_icons["employer_search_candidate"]
                                        },
                                        {
                                            "text": "C·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty",
                                            "image_url": self.chatbot_icons["employer_update_company_info"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "image_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "image_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "image_url": self.chatbot_icons["common_about_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_update_company_info_intent_response(self, params={}):
        """
        Return response for UpdateCompanyInfoIntent
        
        Args:
            params (dict): Dictionary of parameters
                update_company_info_link: str - link to update company info page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(options=[
                                    {
                                        "text": "C·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty",
                                        "image_url": self.chatbot_icons["employer_update_company_info"],
                                        "link": params.get("update_company_info_link", "")
                                    }
                                ])
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m v·ªÅ tuy·ªÉn d·ª•ng kh√¥ng ha? ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm ·ª©ng vi√™n",
                                            "image_url": self.chatbot_icons["employer_search_candidate"]
                                        },
                                        {
                                            "text": "H·ªì s∆° ·ª©ng tuy·ªÉn",
                                            "image_url": self.chatbot_icons["employer_manage_candidate"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "image_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "image_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "image_url": self.chatbot_icons["common_about_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_feedback_intent_response(self, params={}):
        """
        Return response for FeedbackIntent
        
        Args:
            params (dict): Dictionary of parameters
                feedback_image_url: str - image url
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        'B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t "Ph·∫£n h·ªìi" ·ªü g√≥c d∆∞·ªõi b√™n tr√°i ƒë·ªÉ ƒë√°nh gi√° v√† ph·∫£n h·ªìi v·ªÅ d·ªãch v·ª• c·ªßa MyJob!'
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_image_response_component(
                                    image_url=params.get("feedback_image_url", ""),
                                    accessibility_text="Description image"
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m v·ªÅ tuy·ªÉn d·ª•ng kh√¥ng ha? ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm ·ª©ng vi√™n",
                                            "image_url": self.chatbot_icons["employer_search_candidate"]
                                        },
                                        {
                                            "text": "H·ªì s∆° ·ª©ng tuy·ªÉn",
                                            "image_url": self.chatbot_icons["employer_manage_candidate"]
                                        },
                                        {
                                            "text": "C·∫≠p nh·∫≠t th√¥ng tin c√¥ng ty",
                                            "image_url": self.chatbot_icons["employer_update_company_info"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "image_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "image_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "image_url": self.chatbot_icons["common_about_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_support_intent_response(self, params={}):
        """
        Return response for SupportIntent
        
        Args:
            params (dict): Dictionary of parameters
                faq_link: str - link to faq page
                how_to_use_link: str - link to how to use page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                {
                    "text": {
                        "text": [
                            "M√¨nh c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n v·ªÅ tuy·ªÉn d·ª•ng kh√¥ng? H√£y cho m√¨nh bi·∫øt b·∫°n ƒëang g·∫∑p v·∫•n ƒë·ªÅ g√¨ nh√©! üòä"
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√†i kho·∫£n & M·∫≠t kh·∫©u",
                                            "icon_url": self.chatbot_icons["common_account_and_password"]
                                        },
                                        {
                                            "text": "C√¢u h·ªèi th∆∞·ªùng g·∫∑p",
                                            "icon_url": self.chatbot_icons["common_faq"],
                                            "link": params.get("faq_link", "")
                                        },
                                        {
                                            "text": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                            "icon_url": self.chatbot_icons["common_how_to_use"],
                                            "link": params.get("how_to_use_link", "")
                                        },
                                        {
                                            "text": "Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t∆∞ v·∫•n vi√™n",
                                            "icon_url": self.chatbot_icons["common_chat_with_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_contact_consultant_intent_response(self, params={}):
        """
        Return response for ContactConsultantIntent
        
        Args:
            params (dict): Dictionary of parameters

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ t∆∞ v·∫•n vi√™n c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t·ªët nh·∫•t v·ªÅ tuy·ªÉn d·ª•ng, m√¨nh c·∫ßn b·∫°n cung c·∫•p m·ªôt v√†i th√¥ng tin nh√©! üòä",
                        "ƒê·∫ßu ti√™n, b·∫°n cho m√¨nh bi·∫øt t√™n c·ªßa b·∫°n ƒë∆∞·ª£c kh√¥ng ·∫°? üëã",
                    ]
                )
            ]
        }

    def get_contact_consultant_input_name_company_email_phone_intent_response(self, params={}):
        """
        Return response for ContactConsultant_InputName_CompanyName_Email_Phone_Intent
        
        Args:
            params (dict): Dictionary of parameters
                name: str - name
                company: str - company
                email: str - email
                phone: str - phone
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title="Th√¥ng tin li√™n h·ªá c·ªßa b·∫°n",
                                    text=[
                                        "‚û§ T√™n: " + params.get("name", ""),
                                        "‚û§ T√™n c√¥ng ty: " + params.get("company_name", ""),
                                        "‚û§ Email: " + params.get("email", ""),
                                        "‚û§ S·ªë ƒëi·ªán tho·∫°i: " + params.get("phone", ""),
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "C·∫£m ∆°n b·∫°n r·∫•t nhi·ªÅu! T∆∞ v·∫•n vi√™n c·ªßa ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong th·ªùi gian s·ªõm nh·∫•t. üôè"
                    ]
                )
            ]
        }

    def get_account_and_password_intent_response(self, params={}):
        """
        Return response for AccountAndPasswordIntent
        
        Args:
            params (dict): Dictionary of parameters
                account_and_password_link: str - link to account and password page
                faq_link: str - link to faq page
                how_to_use_link: str - link to how to use page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                {
                    "text": {
                        "text": [
                            "Nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ v√†o trang t√†i kho·∫£n v√† m·∫≠t kh·∫©u c·ªßa b·∫°n nha! üòä"
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang t√†i kho·∫£n v√† m·∫≠t kh·∫©u",
                                            "icon_url": self.chatbot_icons["common_account_and_password"],
                                            "link": params.get("account_and_password_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        f"B·∫°n c√≤n c·∫ßn {self.app_name} h·ªó tr·ª£ g√¨ v·ªÅ tuy·ªÉn d·ª•ng n·ªØa kh√¥ng n√®? ƒê·ª´ng ng·∫°i chia s·∫ª v·ªõi m√¨nh nh√©! ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "C√¢u h·ªèi th∆∞·ªùng g·∫∑p",
                                            "icon_url": self.chatbot_icons["common_faq"],
                                            "link": params.get("faq_link", "")
                                        },
                                        {
                                            "text": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                            "icon_url": self.chatbot_icons["common_how_to_use"],
                                            "link": params.get("how_to_use_link", "")
                                        },
                                        {
                                            "text": "Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t∆∞ v·∫•n vi√™n",
                                            "icon_url": self.chatbot_icons["common_chat_with_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_about_us_intent_response(self, params={}):
        """
        Return response for AboutUsIntent
        
        Args:
            params (dict): Dictionary of parameters
                about_us_company_count: str - number of companies
                about_us_job_count: str - number of jobs
                about_us_candidate_count: str - number of candidates
                about_us_satisfaction_rate: str - satisfaction rate
                about_us_matching_rate: str - matching rate
                about_us_image_url: str - image url
                about_us_action_link: str - action link
                search_candidate_link: str - link to search candidate page
                google_play_download_app_link: str - link to google play download app
                app_store_download_app_link: str - link to app store download app
                about_us_contact_info: list[str] - contact info
                facebook_link: str - link to facebook
                linkedin_link: str - link to linkedin
                youtube_link: str - link to youtube
                instagram_link: str - link to instagram
                privacy_policy_link: str - link to privacy policy
                terms_of_use_link: str - link to terms of use
                intellectual_property_link: str - link to intellectual property
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f"üåü CH√ÄO M·ª™NG B·∫†N ƒê·∫æN V·ªöI {self.app_name.upper()} üåü",
                        f'{self.app_name} - K√™nh th√¥ng tin tuy·ªÉn d·ª•ng v√† vi·ªác l√†m d√†nh cho m·ªçi Doanh nghi·ªáp v√† ·ª®ng vi√™n. ',
                        'Ch√∫ng t√¥i tin t∆∞·ªüng s·∫Ω ƒëem l·∫°i "HY V·ªåNG" cho Doanh nghi·ªáp t√¨m ki·∫øm nh√¢n t√†i v√† cho ·ª®ng vi√™n t√¨m ki·∫øm c∆° h·ªôi ngh·ªÅ nghi·ªáp.',
                        f'V·ªõi 2 h·ªá th·ªëng: Website d√†nh cho Nh√† Tuy·ªÉn D·ª•ng v√† ·ª®ng d·ª•ng (Application) d√†nh cho Ng∆∞·ªùi T√¨m Vi·ªác, {self.app_name} s·∫Ω mang l·∫°i nh·ªØng tr·∫£i nghi·ªám m·ªõi m·∫ª, th√∫ v·ªã; k·∫øt n·ªëi ∆∞·ªõc m∆° chinh ph·ª•c c√¥ng vi·ªác c·ªßa m·ªçi nh√¢n t√†i v√† gi√∫p doanh nghi·ªáp x√¢y d·ª±ng ƒë·ªôi ng≈© nh√¢n s·ª± v·ªØng m·∫°nh.'
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_info_response_component(
                                    title="Ch·ªçn ƒë√∫ng vi·ªác - ƒêi ƒë√∫ng h∆∞·ªõng",
                                    subtitle="Kh√°m ph√° c√¥ng vi·ªác ph√π h·ª£p v·ªõi ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp. Th√¥ng tin chi ti·∫øt v·ªÅ y√™u c·∫ßu c√¥ng vi·ªác, m√¥i tr∆∞·ªùng v√† c∆° h·ªôi ph√°t tri·ªÉn t·∫°i m·ªói c√¥ng ty.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_1", ""),
                                ),
                                self._get_info_response_component(
                                    title="T·∫°o CV & Profile",
                                    subtitle="X√¢y d·ª±ng h·ªì s∆° ·ª©ng tuy·ªÉn chuy√™n nghi·ªáp v·ªõi c√¥ng c·ª• t·∫°o CV th√¥ng minh. T·ªëi ∆∞u profile v·ªõi c√°c m·∫´u CV ƒë·∫πp m·∫Øt theo t·ª´ng ng√†nh ngh·ªÅ.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_2", "")
                                ),
                                self._get_info_response_component(
                                    title="Vi·ªác l√†m xung quanh b·∫°n",
                                    subtitle="T√¨m ki·∫øm c∆° h·ªôi vi·ªác l√†m l√Ω t∆∞·ªüng trong khu v·ª±c. V·ªõi t√≠nh nƒÉng ƒë·ªãnh v·ªã th√¥ng minh, g·ª£i √Ω c√¥ng vi·ªác ph√π h·ª£p g·∫ßn n∆°i b·∫°n sinh s·ªëng.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_3", "")
                                ),
                                self._get_info_response_component(
                                    title="Th√¥ng b√°o vi·ªác l√†m m·ªçi l√∫c",
                                    subtitle="Kh√¥ng b·ªè l·ª° c∆° h·ªôi v·ªõi h·ªá th·ªëng th√¥ng b√°o th√¥ng minh. Nh·∫≠n th√¥ng tin t·ª©c th√¨ v·ªÅ c√°c v·ªã tr√≠ vi·ªác l√†m m·ªõi ph√π h·ª£p v·ªõi k·ªπ nƒÉng.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_4", "")
                                )
                            ]
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title=f"üí´ {self.app_name.upper()} - CON S·ªê ·∫§N T∆Ø·ª¢NG:",
                                    text=[
                                        f"üè¢ {params.get('about_us_company_count', '')} Doanh nghi·ªáp ƒë·ªëi t√°c",
                                        f"üíº {params.get('about_us_job_count', '')} Vi·ªác l√†m m·ªói nƒÉm",
                                        f"üë• {params.get('about_us_candidate_count', '')} ·ª®ng vi√™n tin t∆∞·ªüng",
                                        f"üåü {params.get('about_us_satisfaction_rate', '')} T·ª∑ l·ªá h√†i l√≤ng",
                                        f"üéØ {params.get('about_us_matching_rate', '')} T·ª∑ l·ªá matching c√¥ng vi·ªác cao nh·∫•t th·ªã tr∆∞·ªùng"
                                    ]
                                )
                            ],
                            [
                                self._get_image_response_component(
                                    image_url=params.get("about_us_image_url", ""),
                                    accessibility_text="Alt image"
                                ),
                                self._get_info_response_component(
                                    title="üèÜ TH√ÄNH T·ª∞U N·ªîI B·∫¨T",
                                    subtitle=[
                                        f"S·ªë 1 v·ªÅ tuy·ªÉn d·ª•ng t·∫°i Vi·ªát Nam",
                                        f"T√¨m ki·∫øm h√†ng tri·ªáu ·ª©ng vi√™n ch·∫•t l∆∞·ª£ng t·∫°i {self.app_name}!"
                                    ],
                                    action_link=params.get("about_us_action_link", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "·ª®ng vi√™n n·ªïi b·∫≠t",
                                            "link": params.get("search_candidate_link", "")
                                        },
                                        {
                                            "text": "T·∫£i ·ª©ng d·ª•ng tr√™n Google Play",
                                            "link": params.get("google_play_download_app_link", "")
                                        },
                                        {
                                            "text": "T·∫£i ·ª©ng d·ª•ng tr√™n App Store",
                                            "link": params.get("app_store_download_app_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title="üìû TH√îNG TIN LI√äN H·ªÜ:",
                                    text=params.get("about_us_contact_info", "")
                                )
                            ],
                            [
                                self._get_info_response_component(
                                    title="K·∫æT N·ªêI V·ªöI CH√öNG T√îI",
                                    subtitle=f"Theo d√µi {self.app_name} tr√™n c√°c n·ªÅn t·∫£ng m·∫°ng x√£ h·ªôi ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ th·ªã tr∆∞·ªùng vi·ªác l√†m v√† c∆° h·ªôi ngh·ªÅ nghi·ªáp!",
                                    image_url=self.chatbot_icons.get("common_social", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "Facebook",
                                            "icon_url": self.chatbot_icons.get("common_social_facebook", ""),
                                            "link": params.get("facebook_link", "")
                                        },
                                        {
                                            "text": "LinkedIn",
                                            "icon_url": self.chatbot_icons.get("common_social_linkedin", ""),
                                            "link": params.get("linkedin_link", "")
                                        },
                                        {
                                            "text": "Youtube",
                                            "icon_url": self.chatbot_icons.get("common_social_youtube", ""),
                                            "link": params.get("youtube_link", "")
                                        },
                                        {
                                            "text": "Instagram",
                                            "icon_url": self.chatbot_icons.get("common_social_instagram", ""),
                                            "link": params.get("instagram_link", "")
                                        }
                                    ]
                                )
                            ],
                            [
                                self._get_info_response_component(
                                    title="CH√çNH S√ÅCH & ƒêI·ªÄU KHO·∫¢N",
                                    subtitle=f"{self.app_name} cam k·∫øt b·∫£o v·ªá quy·ªÅn l·ª£i v√† th√¥ng tin c·ªßa ng∆∞·ªùi d√πng. Vui l√≤ng ƒë·ªçc k·ªπ c√°c ch√≠nh s√°ch tr∆∞·ªõc khi s·ª≠ d·ª•ng d·ªãch v·ª•.",
                                    image_url=self.chatbot_icons.get("common_privacy_policy", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "Ch√≠nh s√°ch b·∫£o m·∫≠t",
                                            "link": params.get("privacy_policy_link", "")
                                        },
                                        {
                                            "text": "ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng",
                                            "link": params.get("terms_of_use_link", "")
                                        },
                                        {
                                            "text": "Quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá",
                                            "link": params.get("intellectual_property_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }
