from chatbot.chat_responses.common_chat_response import CommonChatResponse


class JobSeekerChatResponse(CommonChatResponse):
    # JobSeeker Intent Constants
    WELCOME_INTENT = "WelcomeIntent"
    SEARCH_JOB_INTENT = "SearchJobIntent"
    SEARCH_COMPANY_INTENT = "SearchCompanyIntent"
    MANAGE_PROFILE_INTENT = "ManageProfileIntent"
    TRACK_APPLICATION_STATUS_INTENT = "TrackApplicationStatusIntent"
    FEEDBACK_INTENT = "FeedbackIntent"
    JOB_NOTIFICATION_INTENT = "JobNotificationIntent"
    SUPPORT_INTENT = "SupportIntent" 
    CONTACT_CONSULTANT_INTENT = "ContactConsultantIntent"
    CONTACT_CONSULTANT_INPUT_NAME_EMAIL_PHONE_INTENT = "ContactConsultant_InputName_Email_Phone_Intent"
    ACCOUNT_AND_PASSWORD_INTENT = "AccountAndPasswordIntent"
    ABOUT_US_INTENT = "AboutUsIntent"
    
    def __init__(self):
        super().__init__()

    def get_welcome_intent_response(self, params={}):
        """
        Return response with list of chip options for WelcomeIntent
        
        Args:
            params (dict): Dictionary of parameters

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f"Xin ch√†o! M√¨nh l√† tr·ª£ l√Ω t√¨m vi·ªác c·ªßa {self.app_name}. M√¨nh c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["job_seeker_search_job"]
                                        },
                                        {
                                            "text": "T√¨m ki·∫øm c√¥ng ty",
                                            "icon_url": self.chatbot_icons["job_seeker_search_company"]
                                        },
                                        {
                                            "text": "Qu·∫£n l√Ω h·ªì s∆°",
                                            "icon_url": self.chatbot_icons["job_seeker_manage_profile"]
                                        },
                                        {
                                            "text": "Theo d√µi tr·∫°ng th√°i ·ª©ng tuy·ªÉn",
                                            "icon_url": self.chatbot_icons["job_seeker_track_application_status"]
                                        },
                                        {
                                            "text": "Nh·∫≠n th√¥ng b√°o vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["common_notification"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "icon_url": self.chatbot_icons["common_feedback"]},
                                        {
                                            "text": "H·ªó tr·ª£", "icon_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "icon_url": self.chatbot_icons["common_about_us"]
                                        },
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn h·ªó tr·ª£ g√¨ ha? üòä"
                    ]
                )
            ]
        }

    def get_search_job_intent_response(self, params={}):
        """
        Return response for SearchJobIntent
        
        Args:
            params (dict): Dictionary of parameters
                search_job_link: str - link to search job page

        Returns:
            dict: Response with list of chip options
        """

        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t√¨m ki·∫øm c√¥ng vi·ªác ph√π h·ª£p nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang t√¨m ki·∫øm vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["job_seeker_search_job"],
                                            "link": params.get("search_job_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m kh√¥ng ha? ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm c√¥ng ty",
                                            "icon_url": self.chatbot_icons["job_seeker_search_company"]
                                        },
                                        {
                                            "text": "Qu·∫£n l√Ω h·ªì s∆°",
                                            "icon_url": self.chatbot_icons["job_seeker_manage_profile"]},
                                        {
                                            "text": "Theo d√µi tr·∫°ng th√°i ·ª©ng tuy·ªÉn",
                                            "icon_url": self.chatbot_icons["job_seeker_track_application_status"]
                                        },
                                        {
                                            "text": "Nh·∫≠n th√¥ng b√°o vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["common_notification"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "icon_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "icon_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "icon_url": self.chatbot_icons["common_about_us"]
                                        },
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_search_company_intent_response(self, params={}):
        """
        Return response for SearchCompanyIntent
        
        Args:
            params (dict): Dictionary of parameters
                search_company_link: str - link to search company page

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t√¨m ki·∫øm c√¥ng ty ph√π h·ª£p nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang t√¨m ki·∫øm c√¥ng ty",
                                            "icon_url": self.chatbot_icons["job_seeker_search_company"],
                                            "link": params.get("search_company_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=["Kh√¥ng bi·∫øt b·∫°n c·∫ßn m√¨nh h·ªó tr·ª£ g√¨ th√™m kh√¥ng ha? ü§ó"]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√¨m ki·∫øm vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["job_seeker_search_job"]
                                        },
                                        {
                                            "text": "Qu·∫£n l√Ω h·ªì s∆°",
                                            "icon_url": self.chatbot_icons["job_seeker_manage_profile"]
                                        },
                                        {
                                            "text": "Theo d√µi tr·∫°ng th√°i ·ª©ng tuy·ªÉn",
                                            "icon_url": self.chatbot_icons["job_seeker_track_application_status"]
                                        },
                                        {
                                            "text": "Nh·∫≠n th√¥ng b√°o vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["common_notification"]
                                        },
                                        {
                                            "text": "ƒê√°nh gi√° v√† ph·∫£n h·ªìi",
                                            "icon_url": self.chatbot_icons["common_feedback"]
                                        },
                                        {
                                            "text": "H·ªó tr·ª£",
                                            "icon_url": self.chatbot_icons["common_support"]
                                        },
                                        {
                                            "text": "V·ªÅ ch√∫ng t√¥i",
                                            "icon_url": self.chatbot_icons["common_about_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_manage_profile_intent_response(self, params={}):
        """
        Return response for ManageProfileIntent
        
        Args:
            params (dict): Dictionary of parameters
                manage_profile_link: str - link to manage profile page
                online_profile_link: str - link to online profile page
                login_link: str - link to login page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=["B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫øn trang qu·∫£n l√Ω h·ªì s∆° c·ªßa m√¨nh nha! ü•≥"]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "Qu·∫£n l√Ω to√†n b·ªô h·ªì s∆°",
                                            "icon_url": self.chatbot_icons["job_seeker_manage_all_profile"],
                                            "link": params.get("manage_profile_link", "")
                                        },
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        f"Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem v√† c·∫≠p nh·∫≠t h·ªì s∆° {self.app_name} c·ªßa b·∫°n!"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": f"ƒêi ƒë·∫øn trang c·∫≠p nh·∫≠t h·ªì s∆° {self.app_name}",
                                            "icon_url": self.chatbot_icons["job_seeker_myjob_profile"],
                                            "link": params.get("online_profile_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        f"H·ªì s∆° {self.app_name} l√† h·ªì s∆° m·∫∑c ƒë·ªãnh khi b·∫°n ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i {self.app_name} nh√©!"
                    ]
                ),
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ qu·∫£n l√Ω h·ªì s∆°, b·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc nh√©!",
                        f"N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, h√£y nh·∫•n n√∫t ƒëƒÉng nh·∫≠p b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c. Sau khi ƒëƒÉng nh·∫≠p xong, b·∫°n c√≥ th·ªÉ qu·∫£n l√Ω h·ªì s∆° c·ªßa m√¨nh nha! üòä"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêƒÉng nh·∫≠p",
                                            "icon_url": self.chatbot_icons["common_login"],
                                            "link": params.get("login_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_track_application_status_intent_response(self, params={}):
        """
        Return response for TrackApplicationStatusIntent
        
        Args:
            params (dict): Dictionary of parameters
                track_application_status_link: str - link to track application status page
                login_link: str - link to login page

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem t·∫•t c·∫£ vi·ªác l√†m ƒë√£ ·ª©ng tuy·ªÉn c·ªßa b·∫°n nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang vi·ªác l√†m ƒë√£ ·ª©ng tuy·ªÉn",
                                            "icon_url": self.chatbot_icons["job_seeker_track_application_status"],
                                            "link": params.get("track_application_status_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ xem t·∫•t c·∫£ vi·ªác l√†m ƒë√£ ·ª©ng tuy·ªÉn c·ªßa b·∫°n, b·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc nh√©!",
                        f"N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, h√£y nh·∫•n n√∫t ƒëƒÉng nh·∫≠p b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c. Sau khi ƒëƒÉng nh·∫≠p xong, b·∫°n c√≥ th·ªÉ xem t·∫•t c·∫£ vi·ªác l√†m ƒë√£ ·ª©ng tuy·ªÉn c·ªßa m√¨nh nha! üòä"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêƒÉng nh·∫≠p",
                                            "icon_url": self.chatbot_icons["common_login"],
                                            "link": params.get("login_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_feedback_intent_response(self, params={}):
        """
        Return response for FeedbackIntent
        
        Args:
            params (dict): Dictionary of parameters
                reference_image_url: str - link to reference image

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f'B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t "Ph·∫£n h·ªìi" ·ªü g√≥c d∆∞·ªõi b√™n tr√°i ƒë·ªÉ ƒë√°nh gi√° v√† ph·∫£n h·ªìi v·ªÅ d·ªãch v·ª• c·ªßa {self.app_name}!'
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_image_response_component(
                                    image_url=params.get("reference_image_url", ""),
                                    accessibility_text="Description image"
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ ƒë√°nh gi√° v√† ph·∫£n h·ªìi, b·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc nh√©!",
                        f"N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, h√£y nh·∫•n n√∫t ƒëƒÉng nh·∫≠p b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c. Sau khi ƒëƒÉng nh·∫≠p xong, b·∫°n c√≥ th·ªÉ chia s·∫ª √Ω ki·∫øn c·ªßa m√¨nh v·ªÅ {self.app_name} nha! üòä"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêƒÉng nh·∫≠p",
                                            "icon_url": self.chatbot_icons["common_login"],
                                            "link": params.get("login_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_job_notification_intent_response(self, params={}):
        """
        Return response for JobNotificationIntent
        
        Args:
            params (dict): Dictionary of parameters
                job_notification_link: str - link to job notification page
                login_link: str - link to login page
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f"B·∫°n c√≥ th·ªÉ nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem, t·∫°o m·ªõi, c·∫≠p nh·∫≠t ho·∫∑c xo√° th√¥ng b√°o vi·ªác l√†m c·ªßa b·∫°n nha! ü•≥"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang th√¥ng b√°o vi·ªác l√†m",
                                            "icon_url": self.chatbot_icons["common_notification"],
                                            "link": params.get("job_notification_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ qu·∫£n l√Ω th√¥ng b√°o vi·ªác l√†m c·ªßa b·∫°n, b·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc nh√©!",
                        f"N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, h√£y nh·∫•n n√∫t ƒëƒÉng nh·∫≠p b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c. Sau khi ƒëƒÉng nh·∫≠p xong, b·∫°n c√≥ th·ªÉ qu·∫£n l√Ω th√¥ng b√°o vi·ªác l√†m c·ªßa m√¨nh nha! üòä"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêƒÉng nh·∫≠p",
                                            "icon_url": self.chatbot_icons["common_login"],
                                            "link": params.get("login_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_support_intent_response(self, params={}):
        """
        Return response for SupportIntent
        
        Args:
            params (dict): Dictionary of parameters
                faq_link: str - link to faq page
                how_to_use_link: str - link to how to use page
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "M√¨nh c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n kh√¥ng? H√£y cho m√¨nh bi·∫øt b·∫°n ƒëang g·∫∑p v·∫•n ƒë·ªÅ g√¨ nh√©! üòä"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "T√†i kho·∫£n & M·∫≠t kh·∫©u",
                                            "icon_url": self.chatbot_icons["common_account_and_password"]
                                        },
                                        {
                                            "text": "C√¢u h·ªèi th∆∞·ªùng g·∫∑p",
                                            "icon_url": self.chatbot_icons["common_faq"],
                                            "link": params.get("faq_link", "")
                                        },
                                        {
                                            "text": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                            "icon_url": self.chatbot_icons["common_how_to_use"],
                                            "link": params.get("how_to_use_link", "")
                                        },
                                        {
                                            "text": "Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t∆∞ v·∫•n vi√™n",
                                            "icon_url": self.chatbot_icons["common_chat_with_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_contact_consultant_intent_response(self, params={}):
        """
        Return response for ContactConsultantIntent
        
        Args:
            params (dict): Dictionary of parameters
                name: str - name of the contact consultant
                email: str - email of the contact consultant
                phone: str - phone of the contact consultant

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        "ƒê·ªÉ t∆∞ v·∫•n vi√™n c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t·ªët nh·∫•t, m√¨nh c·∫ßn b·∫°n cung c·∫•p m·ªôt v√†i th√¥ng tin nh√©! üòä",
                        "ƒê·∫ßu ti√™n, b·∫°n cho m√¨nh bi·∫øt t√™n c·ªßa b·∫°n ƒë∆∞·ª£c kh√¥ng ·∫°?",
                    ]
                )
            ]
        }

    def get_contact_consultant_input_name_email_phone_intent_response(self, params={}):
        """
        Return response for ContactConsultant_InputName_Email_Phone_Intent
        
        Args:
            params (dict): Dictionary of parameters
                name: str - name of the contact consultant
                email: str - email of the contact consultant
                phone: str - phone of the contact consultant

        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title="‚ÑπÔ∏è Th√¥ng tin li√™n h·ªá c·ªßa b·∫°n",
                                    text=[
                                        "‚û§ T√™n: " + params.get("name", ""),
                                        "‚û§ Email: " + params.get("email", ""),
                                        "‚û§ S·ªë ƒëi·ªán tho·∫°i: " + params.get("phone", ""),
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        "C·∫£m ∆°n b·∫°n r·∫•t nhi·ªÅu! T∆∞ v·∫•n vi√™n c·ªßa ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong th·ªùi gian s·ªõm nh·∫•t."
                    ]
                )
            ]
        }

    def get_account_and_password_intent_response(self, params={}):
        """
        Return response for AccountAndPasswordIntent
        
        Args:
            params (dict): Dictionary of parameters
                account_and_password_link: str - link to account and password page
                faq_link: str - link to faq page
                how_to_use_link: str - link to how to use page
        """
        return {
            "fulfillmentMessages": [
                {
                    "text": {
                        "text": [
                            "Nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ v√†o trang t√†i kho·∫£n v√† m·∫≠t kh·∫©u c·ªßa b·∫°n nha! üòä"
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "ƒêi ƒë·∫øn trang t√†i kho·∫£n v√† m·∫≠t kh·∫©u",
                                            "icon_url": self.chatbot_icons["common_account_and_password"],
                                            "link": params.get("account_and_password_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                self._get_text_response_component(
                    text=[
                        f"B·∫°n c√≤n c·∫ßn {self.app_name} h·ªó tr·ª£ g√¨ n·ªØa kh√¥ng n√®? ƒê·ª´ng ng·∫°i chia s·∫ª v·ªõi m√¨nh nh√©! ü§ó"
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "C√¢u h·ªèi th∆∞·ªùng g·∫∑p",
                                            "icon_url": self.chatbot_icons["common_faq"],
                                            "link": params.get("faq_link", "")
                                        },
                                        {
                                            "text": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                            "icon_url": self.chatbot_icons["common_how_to_use"],
                                            "link": params.get("how_to_use_link", "")
                                        },
                                        {
                                            "text": "Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t∆∞ v·∫•n vi√™n",
                                            "icon_url": self.chatbot_icons["common_chat_with_us"]
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }

    def get_about_us_intent_response(self, params={}):
        """
        Return response for AboutUsIntent
        
        Args:
            params (dict): Dictionary of parameters
                about_us_company_count: str - number of companies
                about_us_job_count: str - number of jobs
                about_us_candidate_count: str - number of candidates
                about_us_satisfaction_rate: str - satisfaction rate
                about_us_matching_rate: str - matching rate
                about_us_image_url: str - image url
                about_us_action_link: str - action link
                search_company_link: str - link to search company page
                search_job_link: str - link to search job page
                google_play_download_app_link: str - link to google play download app
                app_store_download_app_link: str - link to app store download app
                about_us_contact_info: list[str] - contact info
                facebook_link: str - link to facebook
                linkedin_link: str - link to linkedin
                youtube_link: str - link to youtube
                instagram_link: str - link to instagram
                privacy_policy_link: str - link to privacy policy
                terms_of_use_link: str - link to terms of use
                intellectual_property_link: str - link to intellectual property
        Returns:
            dict: Response with list of chip options
        """
        return {
            "fulfillmentMessages": [
                self._get_text_response_component(
                    text=[
                        f"üåü CH√ÄO M·ª™NG B·∫†N ƒê·∫æN V·ªöI {self.app_name.upper()} üåü",
                        f'{self.app_name} - K√™nh th√¥ng tin tuy·ªÉn d·ª•ng v√† vi·ªác l√†m d√†nh cho m·ªçi Doanh nghi·ªáp v√† ·ª®ng vi√™n. ',
                        'Ch√∫ng t√¥i tin t∆∞·ªüng s·∫Ω ƒëem l·∫°i "HY V·ªåNG" cho Doanh nghi·ªáp t√¨m ki·∫øm nh√¢n t√†i v√† cho ·ª®ng vi√™n t√¨m ki·∫øm c∆° h·ªôi ngh·ªÅ nghi·ªáp.',
                        f'V·ªõi 2 h·ªá th·ªëng: Website d√†nh cho Nh√† Tuy·ªÉn D·ª•ng v√† ·ª®ng d·ª•ng (Application) d√†nh cho Ng∆∞·ªùi T√¨m Vi·ªác, {self.app_name} s·∫Ω mang l·∫°i nh·ªØng tr·∫£i nghi·ªám m·ªõi m·∫ª, th√∫ v·ªã; k·∫øt n·ªëi ∆∞·ªõc m∆° chinh ph·ª•c c√¥ng vi·ªác c·ªßa m·ªçi nh√¢n t√†i v√† gi√∫p doanh nghi·ªáp x√¢y d·ª±ng ƒë·ªôi ng≈© nh√¢n s·ª± v·ªØng m·∫°nh.'
                    ]
                ),
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_info_response_component(
                                    title="Ch·ªçn ƒë√∫ng vi·ªác - ƒêi ƒë√∫ng h∆∞·ªõng",
                                    subtitle="Kh√°m ph√° c√¥ng vi·ªác ph√π h·ª£p v·ªõi ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp. Th√¥ng tin chi ti·∫øt v·ªÅ y√™u c·∫ßu c√¥ng vi·ªác, m√¥i tr∆∞·ªùng v√† c∆° h·ªôi ph√°t tri·ªÉn t·∫°i m·ªói c√¥ng ty.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_1", ""),
                                ),
                                self._get_info_response_component(
                                    title="T·∫°o CV & Profile",
                                    subtitle="X√¢y d·ª±ng h·ªì s∆° ·ª©ng tuy·ªÉn chuy√™n nghi·ªáp v·ªõi c√¥ng c·ª• t·∫°o CV th√¥ng minh. T·ªëi ∆∞u profile v·ªõi c√°c m·∫´u CV ƒë·∫πp m·∫Øt theo t·ª´ng ng√†nh ngh·ªÅ.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_2", "")
                                ),
                                self._get_info_response_component(
                                    title="Vi·ªác l√†m xung quanh b·∫°n",
                                    subtitle="T√¨m ki·∫øm c∆° h·ªôi vi·ªác l√†m l√Ω t∆∞·ªüng trong khu v·ª±c. V·ªõi t√≠nh nƒÉng ƒë·ªãnh v·ªã th√¥ng minh, g·ª£i √Ω c√¥ng vi·ªác ph√π h·ª£p g·∫ßn n∆°i b·∫°n sinh s·ªëng.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_3", "")
                                ),
                                self._get_info_response_component(
                                    title="Th√¥ng b√°o vi·ªác l√†m m·ªçi l√∫c",
                                    subtitle="Kh√¥ng b·ªè l·ª° c∆° h·ªôi v·ªõi h·ªá th·ªëng th√¥ng b√°o th√¥ng minh. Nh·∫≠n th√¥ng tin t·ª©c th√¨ v·ªÅ c√°c v·ªã tr√≠ vi·ªác l√†m m·ªõi ph√π h·ª£p v·ªõi k·ªπ nƒÉng.",
                                    image_url=self.chatbot_icons.get("job_seeker_about_us_target_4", "")
                                )
                            ]
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title=f"üí´ {self.app_name.upper()} - CON S·ªê ·∫§N T∆Ø·ª¢NG:",
                                    text=[
                                        f"üè¢ {params.get('about_us_company_count', '')} Doanh nghi·ªáp ƒë·ªëi t√°c",
                                        f"üíº {params.get('about_us_job_count', '')} Vi·ªác l√†m m·ªói nƒÉm",
                                        f"üë• {params.get('about_us_candidate_count', '')} ·ª®ng vi√™n tin t∆∞·ªüng",
                                        f"üåü {params.get('about_us_satisfaction_rate', '')} T·ª∑ l·ªá h√†i l√≤ng",
                                        f"üéØ {params.get('about_us_matching_rate', '')} T·ª∑ l·ªá matching c√¥ng vi·ªác cao nh·∫•t th·ªã tr∆∞·ªùng"
                                    ]
                                )
                            ],
                            [
                                self._get_image_response_component(
                                    image_url=params.get("about_us_image_url", ""),
                                    accessibility_text="Alt image"
                                ),
                                self._get_info_response_component(
                                    title="üèÜ TH√ÄNH T·ª∞U N·ªîI B·∫¨T",
                                    subtitle=[
                                        f"S·ªë 1 v·ªÅ tuy·ªÉn d·ª•ng t·∫°i Vi·ªát Nam",
                                        f"Kh√°m ph√° h√†ng tri·ªáu c∆° h·ªôi vi·ªác l√†m h·∫•p d·∫´n v√† ƒë·ªãnh h∆∞·ªõng s·ª± nghi·ªáp t∆∞∆°ng lai c·ªßa b·∫°n t·∫°i {self.app_name}!"
                                    ],
                                    action_link=params.get("about_us_action_link", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "C√¥ng ty n·ªïi b·∫≠t",
                                            "link": params.get("search_company_link", "")
                                        },
                                        {
                                            "text": "Vi·ªác l√†m hot",
                                            "link": params.get("search_job_link", "")
                                        },
                                        {
                                            "text": "T·∫£i ·ª©ng d·ª•ng tr√™n Google Play",
                                            "link": params.get("google_play_download_app_link", "")
                                        },
                                        {
                                            "text": "T·∫£i ·ª©ng d·ª•ng tr√™n App Store",
                                            "link": params.get("app_store_download_app_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                },
                {
                    "payload": {
                        "richContent": [
                            [
                                self._get_description_response_component(
                                    title="üìû TH√îNG TIN LI√äN H·ªÜ:",
                                    text=params.get("about_us_contact_info", "")
                                )
                            ],
                            [
                                self._get_info_response_component(
                                    title="K·∫æT N·ªêI V·ªöI CH√öNG T√îI",
                                    subtitle=f"Theo d√µi {self.app_name} tr√™n c√°c n·ªÅn t·∫£ng m·∫°ng x√£ h·ªôi ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ th·ªã tr∆∞·ªùng vi·ªác l√†m v√† c∆° h·ªôi ngh·ªÅ nghi·ªáp!",
                                    image_url=self.chatbot_icons.get("common_social", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "Facebook",
                                            "icon_url": self.chatbot_icons.get("common_social_facebook", ""),
                                            "link": params.get("facebook_link", "")
                                        },
                                        {
                                            "text": "LinkedIn",
                                            "icon_url": self.chatbot_icons.get("common_social_linkedin", ""),
                                            "link": params.get("linkedin_link", "")
                                        },
                                        {
                                            "text": "Youtube",
                                            "icon_url": self.chatbot_icons.get("common_social_youtube", ""),
                                            "link": params.get("youtube_link", "")
                                        },
                                        {
                                            "text": "Instagram",
                                            "icon_url": self.chatbot_icons.get("common_social_instagram", ""),
                                            "link": params.get("instagram_link", "")
                                        }
                                    ]
                                )
                            ],
                            [
                                self._get_info_response_component(
                                    title="CH√çNH S√ÅCH & ƒêI·ªÄU KHO·∫¢N",
                                    subtitle=f"{self.app_name} cam k·∫øt b·∫£o v·ªá quy·ªÅn l·ª£i v√† th√¥ng tin c·ªßa ng∆∞·ªùi d√πng. Vui l√≤ng ƒë·ªçc k·ªπ c√°c ch√≠nh s√°ch tr∆∞·ªõc khi s·ª≠ d·ª•ng d·ªãch v·ª•.",
                                    image_url=self.chatbot_icons.get("common_privacy_policy", "")
                                ),
                                self._get_suggestion_chip_response_component(
                                    options=[
                                        {
                                            "text": "Ch√≠nh s√°ch b·∫£o m·∫≠t",
                                            "link": params.get("privacy_policy_link", "")
                                        },
                                        {
                                            "text": "ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng",
                                            "link": params.get("terms_of_use_link", "")
                                        },
                                        {
                                            "text": "Quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá",
                                            "link": params.get("intellectual_property_link", "")
                                        }
                                    ]
                                )
                            ]
                        ]
                    }
                }
            ]
        }
